buildscript {
	ext {
		eclipse_project_prefix = 'nntool'
	}
  	repositories {
        google()

        mavenLocal()
        mavenCentral()

        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: spring_boot_version

        classpath 'com.bmuschko:gradle-clover-plugin:2.2.3'

        // Unfortunatly, just adding a dependency to jib-gradle-plugin breaks the Android build.
        // Therefore, we can only include it if we don't build Android modules.
        if (gradle.ext.includeJibGradlePlugin) {
        	classpath 'gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:1.4.0'
        }
    }
}

plugins {
	id 'net.ltgt.apt' version '0.21'
	id 'net.ltgt.apt-eclipse' version '0.21'
	id 'net.ltgt.apt-idea' version '0.21'
	
	id 'com.adarshr.test-logger' version '1.6.0' // https://github.com/radarsh/gradle-test-logger-plugin

	id 'org.sonarqube' version '2.8'
	id 'jacoco'
    id 'checkstyle'
}

apply from: "${project.rootDir}/gradle/git_info.gradle"

if (System.getProperty('include-code-coverage') != null) {
	apply from: "${project.rootDir}/gradle/clover_aggregate.gradle"
}

sonarqube {
  properties {
    property "sonar.projectKey", "tuw-sqm-ss2020-02_nntool"
    property "sonar.coverage.jacoco.xmlReportPaths", "${project.rootDir}/couchdb-client/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/nettest-shared-server-storage-couchdb/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/nettest-shared-server-opendata/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/spring-data-couchdb/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/couchdb-spring-boot-starter/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/statistic-service/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/couchdb-spring-boot-autoconfigure/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/result-service/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/map-service/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/collector-service/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/ias-android-common/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/search-service/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/qos-service/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/qos-client-android/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/nettest-shared/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/controller-service/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/loadbalancing-service/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/ias-android-speed/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/nettest-shared-server-storage-postgresql/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/ias-android-demo/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/android-app/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/qos-client-java/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/opendata-collector-service/build/reports/jacoco/test/jacocoTestReport.xml,${project.rootDir}/nettest-shared-server/build/reports/jacoco/test/jacocoTestReport.xml"
  }
}

// define a top-level clean task to delete top-level build directory and clover database
task clean {
    delete "${project.rootDir}/build"
    delete "${project.rootDir}/.clover"
}

allprojects { p ->
    group = 'at.alladin.nettest'
    version = '1.0'

    repositories {
        google()

        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://nexus.pentaho.org/content/groups/omni/' }
        maven { url 'http://maven.restlet.com' }
    }

    apply plugin: 'eclipse' 
    eclipse.project.name = "${eclipse_project_prefix}-${p.name}"

    apply plugin: 'net.ltgt.apt'
    apply plugin: 'net.ltgt.apt-eclipse'
    apply plugin: 'net.ltgt.apt-idea'

    apply plugin: 'com.adarshr.test-logger'
}

subprojects { p ->
	if (p.name.toLowerCase().contains('android')) {
		return
	}

    if (System.getProperty('include-checkstyle-quality-check') == null) {
        apply from: "${project.rootDir}/gradle/checkstyle.gradle"
    }

	if (System.getProperty('include-code-coverage') != null) {
		apply from: "${project.rootDir}/gradle/clover.gradle"
	}

    if (System.getProperty('include-jacoco-code-coverage') != null) {
        apply from: "${project.rootDir}/gradle/jacoco.gradle"
    }

    // make root project clean task depend on (= execute) subproject clean tasks
	rootProject.clean.dependsOn tasks.matching { it.name == "clean" }

	clean.doLast {
		delete ".clover"
	}
}
